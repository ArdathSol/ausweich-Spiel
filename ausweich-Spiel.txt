<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ausweich-Spiel</title>
    <style>
        canvas {
            border: 1px solid black;
            background-color: black;
            display: none;
        }
        #startMenu {
            text-align: center;
            margin-top: 50px;
        }
    </style>
</head>
<body>
    <div id="startMenu">
        <h1>Willkommen zum Ausweich-Spiel</h1>
        <p>Gebe deinen Namen ein:</p>
        <input type="text" id="playerName" placeholder="Dein Name" />
        <br><br>
        <button id="startButton">Spiel Starten</button>
        <h2 id="finalScore"></h2>
    </div>
    <canvas id="gameCanvas" width="400" height="600"></canvas>

    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');
        const startMenu = document.getElementById('startMenu');
        const startButton = document.getElementById('startButton');
        const playerNameInput = document.getElementById('playerName');
        const finalScore = document.getElementById('finalScore');
        let playerName = "";
        let player = {};
        let balls = [];
        let ballInterval = 2000;
        let lastBallTime = Date.now();
        let gameSpeed = 2;
        let gameActive = false;

        function initGame() {
            player = {
                x: canvas.width / 2 - 25,
                y: canvas.height - 60,
                width: 50,
                height: 50,
                dx: 0,
                speed: 5,
                points: 0
            };
            balls = [];
            gameSpeed = 2;
            gameActive = true;
            canvas.style.display = 'block';
            startMenu.style.display = 'none';
            update();
        }

        function drawPlayer() {
            ctx.fillStyle = 'blue';
            ctx.font = "40px Arial";
            ctx.fillText('A', player.x, player.y + player.height);
        }

        function drawBall(ball) {
            ctx.beginPath();
            ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);
            ctx.fillStyle = ball.color;
            ctx.fill();
            ctx.closePath();
        }

        function updatePlayer() {
            player.x += player.dx;

            if (player.x < 0) player.x = 0;
            if (player.x + player.width > canvas.width) player.x = canvas.width - player.width;
        }

        function createBall() {
            const radius = 20;
            const x = Math.random() * (canvas.width - radius * 2) + radius;
            const y = -radius;
            const color = getRandomColor();
            balls.push({ x, y, radius, color });
        }

        function updateBalls() {
            for (let i = 0; i < balls.length; i++) {
                const ball = balls[i];
                ball.y += gameSpeed;

                if (ball.y + ball.radius > player.y && ball.x > player.x && ball.x < player.x + player.width) {
                    gameActive = false;
                    showStartMenu(player.points);
                    return;
                }

                if (ball.y - ball.radius > canvas.height) {
                    balls.splice(i, 1);
                    player.points++;
                    gameSpeed += 0.3;
                    i--;
                }
            }
        }

        function getRandomColor() {
            const letters = '0123456789ABCDEF';
            let color = '#';
            for (let i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }

        function drawScore() {
            ctx.font = "20px Arial";
            ctx.fillStyle = "white";
            ctx.fillText(`Punkte: ${player.points}`, 10, 20);
        }

        function drawGrid() {
            const gridSize = 50;
            ctx.strokeStyle = 'white';
            ctx.lineWidth = 0.5;

            for (let x = 0; x <= canvas.width; x += gridSize) {
                ctx.beginPath();
                ctx.moveTo(x, 0);
                ctx.lineTo(x, canvas.height);
                ctx.stroke();
            }

            for (let y = 0; y <= canvas.height; y += gridSize) {
                ctx.beginPath();
                ctx.moveTo(0, y);
                ctx.lineTo(canvas.width, y);
                ctx.stroke();
            }
        }

        function update() {
            if (!gameActive) return;

            ctx.clearRect(0, 0, canvas.width, canvas.height);

            const now = Date.now();
            if (balls.length === 0 || now - lastBallTime > ballInterval) {
                createBall();
                lastBallTime = now;
            }

            drawGrid();
            updatePlayer();
            updateBalls();

            drawPlayer();
            balls.forEach(drawBall);
            drawScore();

            requestAnimationFrame(update);
        }

        function showStartMenu(score) {
            canvas.style.display = 'none';
            startMenu.style.display = 'block';
            finalScore.textContent = `${playerName}, dein Punktestand: ${score}`;
        }

        startButton.addEventListener('click', () => {
            playerName = playerNameInput.value;
            if (playerName.trim() === "") {
                alert("Bitte gebe einen Namen ein.");
                return;
            }
            initGame();
        });

        document.addEventListener('keydown', (e) => {
            if (e.key === 'ArrowLeft') player.dx = -player.speed;
            else if (e.key === 'ArrowRight') player.dx = player.speed;
        });

        document.addEventListener('keyup', () => {
            player.dx = 0;
        });
    </script>
</body>
</html>
